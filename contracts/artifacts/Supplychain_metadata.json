{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "product",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "predecessors",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "succcessors",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "lables",
						"type": "address[]"
					}
				],
				"name": "ProductAdded",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_labelAddress",
						"type": "address"
					}
				],
				"name": "Get_Label",
				"outputs": [
					{
						"internalType": "contract Label",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_productAddress",
						"type": "address"
					}
				],
				"name": "Get_Product",
				"outputs": [
					{
						"internalType": "contract Product",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "address[]",
						"name": "_ProductIDs",
						"type": "address[]"
					},
					{
						"internalType": "string",
						"name": "_ipfsAddress",
						"type": "string"
					}
				],
				"name": "addLabel",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_carbonFootprint",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "_labelIDs",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "_successors",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "_predecessors",
						"type": "address[]"
					},
					{
						"internalType": "string",
						"name": "_ipfsAddress",
						"type": "string"
					}
				],
				"name": "addProduct",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_id",
						"type": "address"
					}
				],
				"name": "getLabel",
				"outputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "address[]",
						"name": "_labels",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_id",
						"type": "address"
					}
				],
				"name": "getProduct",
				"outputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "carbonFootprint",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "swarmStorageAddress",
						"type": "string"
					},
					{
						"internalType": "address[]",
						"name": "_labels",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "predecessors",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "successors",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/supplychain.sol": "Supplychain"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Handshaker.sol": {
			"keccak256": "0x3b4c62dd3c2a6e1c2da9752651e836d1487fe17a6914100eb299bf79e4d92c2f",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://a7d2bd16b0e1a69cb634b31769cfba036519b87bc1d1accb9115c81fddab545c",
				"dweb:/ipfs/QmQw8k7B2NTYcg58LyZbvv4mea7HGFzKqjjFFoboXRcuAX"
			]
		},
		"contracts/Label.sol": {
			"keccak256": "0x9a7c6e0a6e1c3c06a1a704ec2b55281cc3b671920597142386e364efbee12181",
			"license": "MIT",
			"urls": [
				"bzz-raw://8b0d2baf0281efdce2f41532de5d3528d77869b12c3f237b50513188a9a25df1",
				"dweb:/ipfs/QmUBfqEbdKcH1mVVbdnR3XothhL9LD9oCQL7niXLoP7YZU"
			]
		},
		"contracts/Ownable.sol": {
			"keccak256": "0xd9cf87636f5adbfbb210fbe15b2611c2c2edd6070f8217791bdf598330b1bf5f",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://3d5a0e925546a5f5d969d37aac7092e58470562632e311c43d5fd6fce94af475",
				"dweb:/ipfs/QmRnL2hviBA7L735ah9mvQjbL3wLF7qEzQBuVhc9HRPkfh"
			]
		},
		"contracts/Product.sol": {
			"keccak256": "0xf8a0815524c1b8def93da8dbfa865104ea74633c64952415506e676253a0b0a2",
			"license": "MIT",
			"urls": [
				"bzz-raw://a438a10b43292652e212fdb42a65d7f91bccea589ba944c1ea4ba38ba2732e3a",
				"dweb:/ipfs/QmXa9hyJGogNFAc2bZHp16VxLf9gJJ6onik6QcjtMhrNK4"
			]
		},
		"contracts/supplychain.sol": {
			"keccak256": "0xeb3cd1bf8b9765588c05fe0513b9344f6ce28c457c9067d636024848e8068629",
			"license": "MIT",
			"urls": [
				"bzz-raw://68a66e7a528ef3c82c9f51acea9badf35223c575361d1b8744f133b3fc74871c",
				"dweb:/ipfs/QmRLcsFjEuGHvke9QYavmosjG7dM4Cd8gViKwjb7N4CujR"
			]
		}
	},
	"version": 1
}